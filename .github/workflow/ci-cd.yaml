name: CICD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        pytest app/tests/test_main.py
        pytest app/tests/test_yolo_detect.py

  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.11.9'

  #   - name: Build Docker Image
  #     run: |
  #       docker build -t aivn-mlops/fastapi-backend:latest .

  #   - name: Push Docker Image
  #     run: |
  #       echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
  #       docker push aivn-mlops/fastapi-backend:latest

  # deploy:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Login to EC2
  #     uses: appleboy/ssh-action@v0.1.4
  #     with:
  #       host: ${{ secrets.EC2_HOST }}
  #       username: ubuntu
  #       key: ${{ secrets.EC2_SSH_KEY }}

  #   - name: Deploy Application
  #     run: |
  #       ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << EOF
  #         docker pull aivn-mlops/fastapi-backend:latest
  #         docker stop fastapi-backend || true
  #         docker rm fastapi-backend || true
  #         docker run -d -p 8000:8000 --name fastapi-backend aivn-mlops/fastapi-backend:latest
  #       EOF